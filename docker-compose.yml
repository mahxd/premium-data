version: '3.3'
services:

#  loggie:
#    image: rproxy.aecadmin.ir/hub/loggieio/loggie:main
#    user: "0"
#    volumes:
#      - /var/log/nginx:/var/log/nginx:ro 
#      #- ./loggie/var/log/nginx:/var/log/nginx:ro
#      - ./loggie/loggie.yml:/loggie.yml
#      - ./loggie/pipelines.yml:/pipelines.yml
#      - ./loggie/data:/data
#    depends_on:
#      es01:
#        condition: service_healthy

  setup:
    image: rproxy.aecadmin.ir/hub/elastic/elasticsearch:${STACK_VERSION}
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        touch ok
        echo "Waiting for Elasticsearch availability";
        until curl -s  http://es01:9200 | grep -q "missing authentication credentials"; do sleep 5; done;
        echo "Setting kibana_system password";
        until curl -s -X POST  -u elastic:${ELASTIC_PASSWORD} -H "Content-Type: application/json" http://es01:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 5; done;
        echo "All done!";
        sleep 3;
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f ok ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    depends_on:
      setup:
        condition: service_healthy
    image: rproxy.aecadmin.ir/hub/library/elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      #- cluster.initial_master_nodes=es01
      #- discovery.seed_hosts=""
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true

      - Des.logger.level=DEBUG
      - Elogger.level=DEBUG
      #- http.cors.enabled=true
      #- http.cors.allow-origin=*
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      #- cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
    mem_limit: ${MEM_LIMIT}
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    image: rproxy.aecadmin.ir/hub/elastic/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

#  logstash:
#    depends_on:
#      es01:
#        condition: service_healthy
#    image: rproxy.aecadmin.ir/hub/elastic/logstash:${STACK_VERSION}
#    volumes:
#      - ${LOGSTASH_PIPELINE_PATH}:/usr/share/logstash/pipeline/
#    ports:
#      - 4000:4000 # my custom port
#    mem_limit: ${MEM_LIMIT}
     
volumes:
  esdata01:
    driver: local
  kibanadata:
    driver: local

